upstream api {
	server api:8000;
}
server {
	listen 80;
	server_name synthesis.page;
	return 301 https://$server_name$request_uri;
}

server {

	server_name synthesis.page;
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	# SSL
	ssl_certificate /etc/letsencrypt/live/synthesis.page/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/synthesis.page/privkey.pem;
	ssl_session_cache shared:le_nginx_SSL:10m;
	ssl_session_timeout 1440m;
	ssl_session_tickets off;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers off;
	ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
	client_max_body_size 4G;
	keepalive_timeout 5;

	# Gzip Settings
	gzip on;
	gzip_static on; # allows pre-serving of .gz file if it exists
	gzip_disable "msie6"; # Disable for user-agent Internet explorer 6. Not supported.
	gzip_proxied any; # enable gzip for all proxied requests
	gzip_buffers 16 8k; # number and size of buffers to compress a response
	gzip_http_version 1.1;
	gzip_min_length 256; # Only gzip files of size in bytes
	gzip_types text/plain text/css text/html application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;
	gunzip on; # Uncompress on the fly
	location /api/ {
		try_files $uri @proxy_to_api;
	}
	location /manage {
		try_files $uri @proxy_to_api;
	}
	location /websocket/ {
		try_files $uri @proxy_to_api;
	}

	location @proxy_to_api {
		proxy_pass http://api;

		# proxy_http_version 1.1;
		# proxy_set_header Upgrade $http_upgrade;
		# proxy_set_header Connection "upgrade";

		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $server_name;

	}
	location /backendstatic/ {
		root /synthesis/;
	}
	location / {
		root /usr/share/nginx/html;
		index index.html index.htm;
		try_files $uri /index.html;
	}
	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/html;
	}
}